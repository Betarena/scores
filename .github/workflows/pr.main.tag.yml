# ╭──────────────────────────────────────────────────────────────────╮
# │ 🐙 GITHUB ACIONS CI/CD WORKFLOW                                  │
# ┣──────────────────────────────────────────────────────────────────┫
# │ Responsible for:                                                 │
# │ ➤ [1] 'auto-bump' & 'tag' project version.                       │
# │ ➤ [2] auto-create release + tag of project.                      │
# │ ➤ [3] [disabled] sentry JS sourcemap upload                      │
# │ ➤ [4] build & publish docker image                               │
# │ ➤ [5] [disabled] auto-deploy project to target server.           │
# ╰──────────────────────────────────────────────────────────────────╯

name: '⚡️ Bump ➔ Publish ➔ Release'

'on':
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:

  # ╭──────────────────────────────────────────────────────────────────╮
  # │ NOTE:                                                            │
  # │ ➤ (1) auto-bump & (2) 'tag' project version(s).                  │
  # ╰──────────────────────────────────────────────────────────────────╯

  version-bump:
    name: 🪜 JOB /:/ SemVer Bump Client
    runs-on: ubuntu-22.04
    if:
      ${{
        (
          contains(github.event.pull_request.labels.*.name, 'semver:patch')
          || contains(github.event.pull_request.labels.*.name, 'semver:minor')
          || contains(github.event.pull_request.labels.*.name, 'semver:major')
        )
        && github.event.pull_request.merged == true
      }}
    # ╭─────
    # │ NOTE:
    # │ |: map a step output to a job output.
    # │ |: 🔗 read-more /:/ https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
    # ╰─────
    outputs:
      isVersionBumped: ${{ steps.step-check-version-bump.outputs.bump_version_bool }}
      releaseTag: ${{ steps.step-check-version-bump.outputs.release_tag }}
    steps:
      - name: 'STEP /:/ checkout source code'
        uses: actions/checkout@v4
        with:
          token: '${{ secrets.GH_TOKEN }}'
          fetch-depth: 0
          fetch-tags: true
          ref: main
      - name: 'STEP /:/ config git'
        run: |
          git config --local user.email "${{ secrets.GH_ORG_EMAIL }}"
          git config --local user.name "${{ secrets.GH_ORG_NAME }}"
          git config --local push.default current
          git config --local pull.rebase false
          # [🐞]
          git branch
      - name: 'STEP /:/ config node'
        uses: actions/setup-node@v3
        with:
          node-version: 18.19.0
      - name: 'STEP /:/ config npm'
        run: |
          npm install -g npm@10.2.3
      - name: 'STEP /:/ check version bump'
        id: step-check-version-bump
        # ╭─────
        # │ NOTE:
        # │ |: 🔗 read-more /:/ https://michaelcurrin.github.io/dev-cheatsheets/cheatsheets/ci-cd/github-actions/persist.html
        # │ |: 🔗 read-more /:/ https://stackoverflow.com/questions/58177786/get-the-current-pushed-tag-in-github-actions
        # ╰─────
        run: |
          # [🐞]
          echo "$IS_SEMVER_PATCH $IS_SEMVER_MINOR $IS_SEMVER_MAJOR"
          [ $IS_SEMVER_PATCH == "true" ] && npm version patch
          [ $IS_SEMVER_MINOR == "true" ] && npm version minor
          [ $IS_SEMVER_MAJOR == "true" ] && npm version major
          echo "bump_version_bool=true" >> $GITHUB_OUTPUT
          echo "release_tag=$(npm pkg get version --workspaces=false | tr -d \")" >> $GITHUB_OUTPUT
        shell: bash
        env:
          IS_SEMVER_PATCH: ${{ contains(github.event.pull_request.labels.*.name, 'semver:patch') }}
          IS_SEMVER_MINOR: ${{ contains(github.event.pull_request.labels.*.name, 'semver:minor') }}
          IS_SEMVER_MAJOR: ${{ contains(github.event.pull_request.labels.*.name, 'semver:major') }}
  #

  # ╭──────────────────────────────────────────────────────────────────╮
  # │ NOTE:                                                            │
  # │ ➤ [2] auto-create release + tag of project.                      │
  # ╰──────────────────────────────────────────────────────────────────╯

  release-create:
    name: 📜 JOB /:/ Create Release
    runs-on: ubuntu-22.04
    needs: version-bump
    env:
      RELEASE_TAG: ${{ needs.version-bump.outputs.releaseTag }}
    steps:
      - uses: "marvinpinto/action-automatic-releases@latest"
        # SEE:
        # https://github.com/marketplace/actions/automatic-releases
        with:
          automatic_release_tag: "v${{ env.RELEASE_TAG }}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
  #

  # ╭──────────────────────────────────────────────────────────────────╮
  # │ NOTE:                                                            │
  # │ ➤ [3] [disabled] sentry JS sourcemap upload                      │
  # ╰──────────────────────────────────────────────────────────────────╯

  sentry-sourcemap-deploy:
    name: 🟣 Sentry sourcemap (artifacts) upload
    needs: release-create
    if: false
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - uses: actions/setup-node@v3
        with:
          node-version: 18.19.0
      - name: 'setup npm'
        run: |
          npm install -g npm@10.2.3
      - name: 'build'
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
        run: |
          npm install
          npm run build-2
  #

  # ╭──────────────────────────────────────────────────────────────────╮
  # │ NOTE:                                                            │
  # │ ➤ [4] build & publish docker image                               │
  # ╰──────────────────────────────────────────────────────────────────╯

  docker-image-build-and-push:
    name: 🐳 JOB /:/ Docker Image Build & Publish
    runs-on: ubuntu-22.04
    needs: release-create
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: "STEP /:/ build docker image"
        run: |
          make docker-image-build
          # [🐞]
          docker images
          # [🐞]
          docker images betarena-scores --format "{{.ID}}" --no-trunc --filter "label=project=Scores"
          echo "ENV_IMAGE_TAG_ID=$(docker images betarena-scores --format "{{.ID}}"  --no-trunc --filter "label=project=Scores")" >> $GITHUB_ENV
      - name: "STEP /:/ publish docker image"
        run: |
          make docker-image-publish-to-registry
        env:
          ENV_IMAGE_TAG_ID: ${{ env.ENV_IMAGE_TAG_ID }}
          ENV_DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  #

  # ╭──────────────────────────────────────────────────────────────────╮
  # │ NOTE:                                                            │
  # │ ➤ [5] [disabled] auto-deploy project to target server.           │
  # ╰──────────────────────────────────────────────────────────────────╯

  deploy:
    name: 🚀 JOB /:/ Deployment
    needs: docker-image-build-and-push
    runs-on: ubuntu-22.04
    steps:
      - uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          key: ${{ secrets.SERVER_KEY }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            # ╭─────
            # │ NOTE:
            # │ ➤ [ℹ] Navigate to target project directory
            # ╰─────
            cd web/scores
            # ╭─────
            # │ NOTE:
            # │ ➤ Update the directory with latests changes
            # ╰─────
            git stash
            git pull origin main
            # ╭─────
            # │ NOTE:
            # │ ➤ Run target makefile command
            # ╰─────
            make docker-spin-start-production
  #
#