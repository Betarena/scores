// â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
// â”‚ ðŸ“‘ DESCRIPTION                                                   â”‚
// â”‚ :|: Author Article Data Endpoint                                 â”‚
// â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

// #region âž¤ ðŸ“¦ Package

// â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
// â”‚ NOTE:                                                            â”‚
// â”‚ Please add inside 'this' region the 'imports' that are required  â”‚
// â”‚ by 'this' .svelte file is ran.                                   â”‚
// â”‚ IMPORTANT                                                        â”‚
// â”‚ Please, structure the imports as follows:                        â”‚
// â”‚ 1. svelte/sveltekit, external imports                            â”‚
// â”‚ 2. project-internal files and logic                              â”‚
// â”‚ 5. type(s) imports(s)                                            â”‚
// â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

import dotenv from 'dotenv';

import { main } from '$lib/sveltekit/endpoint/author.article.js';
import { error, RequestHandler } from '@sveltejs/kit';

// #endregion âž¤ ðŸ“¦ Package

// â•­â”€â”€â”€â”€â”€
// â”‚ IMPORTANT
// â”‚ Loads environment secrets
// â•°â”€â”€â”€â”€â”€
dotenv.config();

export async function GET
(
  request
)
{
  return await main
  (
    request
  );
}



export const POST: RequestHandler = async ({request, locals}) => {

  if (!locals.uid) throw error(401, { message: 'Unauthorized' });
  const body = await request.json()
  console.log("POST BODY: ", body)
  return new Response();
};


export const PUT: RequestHandler = async ({request, locals}) => {
  if(!locals.uid) return new Response(null, { status: 401 });

  return new Response();
};